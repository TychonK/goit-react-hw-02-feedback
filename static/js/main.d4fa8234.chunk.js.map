{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Title/Title.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","percentage","className","FeedbackOptions","handleIncrementBad","handleIncrementGood","handleIncrementNeutral","onClick","Title","props","title","children","Notification","message","App","state","setState","prevState","stats","this","Math","floor","Component","ReactDOM","render","document","getElementById"],"mappings":"0TACO,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACpD,OACI,sBAAKC,UAAU,YAAf,UACI,0CAAcL,EAAd,OACA,6CAAiBC,EAAjB,OACA,yCAAYC,EAAZ,OACA,2CAAcC,EAAd,OACA,uDAA0BC,EAA1B,U,MCPL,SAASE,EAAT,GAA+F,IAApEC,EAAmE,EAAnEA,mBAAoBC,EAA+C,EAA/CA,oBAAqBC,EAA0B,EAA1BA,uBACvE,OACI,sBAAKJ,UAAU,cAAf,UACI,wBAAQK,QAASF,EAAqBH,UAAU,kBAAhD,kBACA,wBAAQK,QAASD,EAAwBJ,UAAU,qBAAnD,qBACA,wBAAQK,QAASH,EAAoBF,UAAU,iBAA/C,oBCNL,SAASM,EAAMC,GAClB,OACI,sBAAKP,UAAU,UAAf,UACI,6BAAKO,EAAMC,QACVD,EAAME,YCJZ,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAC1B,OACA,8BACSA,I,ICIPC,E,4MACJC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,oBAAsB,WACpB,EAAKW,UAAS,SAACC,GACb,MAAO,CACLpB,KAAMoB,EAAUpB,KAAO,O,EAK/BS,uBAAyB,WACrB,EAAKU,UAAS,SAACC,GACb,MAAO,CACLnB,QAASmB,EAAUnB,QAAU,O,EAKnCM,mBAAqB,WACnB,EAAKY,UAAS,SAACC,GACb,MAAO,CACLlB,IAAKkB,EAAUlB,IAAM,O,4CAK3B,WACE,IAEImB,EAFElB,EAAQmB,KAAKJ,MAAMhB,IAAMoB,KAAKJ,MAAMlB,KAAOsB,KAAKJ,MAAMjB,QACtDG,EAAamB,KAAKC,MAAMF,KAAKJ,MAAMlB,KAAOG,EAAQ,KAOxD,OAJEkB,EADY,IAAVlB,EACM,cAACY,EAAD,CAAcC,QAAQ,sBAEtB,cAAC,EAAD,CAAYhB,KAAMsB,KAAKJ,MAAMlB,KAAMC,QAASqB,KAAKJ,MAAMjB,QAASC,IAAKoB,KAAKJ,MAAMhB,IAAKC,MAAOA,EAAOC,WAAYA,IAGvH,sBAAKC,UAAU,MAAf,UACE,cAACM,EAAD,CAAOE,MAAM,wBAAb,SACE,cAACP,EAAD,CAAiBC,mBAAqBe,KAAKf,mBAAoBC,oBAAsBc,KAAKd,oBAAqBC,uBAAyBa,KAAKb,2BAE/I,cAACE,EAAD,CAAOE,MAAM,aAAb,SACGQ,W,GA9COI,aAqDHR,ICvDfS,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d4fa8234.chunk.js","sourcesContent":["import './Statistics.scss'\r\nexport function Statistics({ good, neutral, bad, total, percentage }) {\r\n    return (\r\n        <div className=\"stats-box\">\r\n            <span>Good: { good } </span>\r\n            <span>Neutral: { neutral } </span>\r\n            <span>Bad: {bad} </span>\r\n            <span>Total: {total} </span>\r\n            <span>Positive Feedback: {percentage}%</span>\r\n        </div>\r\n )\r\n}","import './Feedback.scss'\r\nexport function FeedbackOptions({ handleIncrementBad, handleIncrementGood, handleIncrementNeutral }) {\r\n    return (\r\n        <div className=\"buttons-box\">\r\n            <button onClick={handleIncrementGood} className=\"add-button good\">Good</button>\r\n            <button onClick={handleIncrementNeutral} className=\"add-button neutral\">Neutral</button>\r\n            <button onClick={handleIncrementBad} className=\"add-button bad\">Bad</button>\r\n        </div>\r\n    )\r\n}","export function Title(props) {\r\n    return (\r\n        <div className=\"section\">\r\n            <h2>{props.title}</h2>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","export function Notification({message}) {\r\n    return (\r\n    <div>\r\n            {message}\r\n    </div>\r\n )\r\n}","import './App.scss';\nimport { Component } from 'react';\nimport { Statistics } from './components/Statistics/Statistics'\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions'\nimport { Title } from './components/Title/Title'\nimport {Notification} from './components/Notification/Notification'\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  handleIncrementGood = () => {\n    this.setState((prevState) => {\n      return {\n        good: prevState.good + 1,\n      }\n    })\n  }\n\nhandleIncrementNeutral = () => {\n    this.setState((prevState) => {\n      return {\n        neutral: prevState.neutral + 1,\n      }\n    })\n  }\n  \n  handleIncrementBad = () => {\n    this.setState((prevState) => {\n      return {\n        bad: prevState.bad + 1,\n      }\n    })\n  }\n\n  render() {\n    const total = this.state.bad + this.state.good + this.state.neutral;\n    const percentage = Math.floor(this.state.good / total * 100);\n    let stats;\n    if (total === 0) {\n      stats = <Notification message=\"No feedback given\" />\n    } else {\n      stats = <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} percentage={percentage} />\n    }\n    return (\n      <div className=\"App\">\n        <Title title=\"Please leave feedback\">\n          <FeedbackOptions handleIncrementBad={ this.handleIncrementBad} handleIncrementGood={ this.handleIncrementGood} handleIncrementNeutral={ this.handleIncrementNeutral}/>\n        </Title>\n        <Title title=\"Statistics\">\n          {stats}\n        </Title>  \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}